#ifndef INC_MBMCS_I2C_STD_H
#define INC_MBMCS_I2C_STD_H

#pragma once

#include <stdint.h>

/* OFFSET=0x0 STATUS OPERATION Register */

#define I2C_STD_MODULE_ENABLE_BIT ((uint32_t)(0x1))
#define I2C_STD_MODULE_ENABLE_SHIFT (31)
#define I2C_STD_MODULE_ENABLE_MASK \
		( I2C_STD_MODULE_ENABLE_BIT << I2C_STD_MODULE_ENABLE_SHIFT)

#define I2C_STD_INTR_ENABLE_BIT ((uint32_t)(0x1))
#define I2C_STD_INTR_ENABLE_SHIFT (30)
#define I2C_STD_INTR_ENABLE_MASK \
		( I2C_STD_INTR_ENABLE_BIT << I2C_STD_INTR_ENABLE_SHIFT)

#define I2C_STD_SPEED_MODE_BIT ((uint32_t)(0x3))
#define I2C_STD_SPEED_MODE_SHIFT (24)
#define I2C_STD_SPEED_MODE_MASK \
		( I2C_STD_SPEED_MODE_BIT << I2C_STD_SPEED_MODE_SHIFT)

#define I2C_STD_SPEED_MODE_IS_STD (0)		/* 100kHz */
#define I2C_STD_SPEED_MODE_IS_FAST (1)		/* 400kHz */
#define I2C_STD_SPEED_MODE_IS_FASTPLUS (2)	/* 1MHz */

#define I2C_STD_IS_ENACK_BIT ((uint32_t)(0x1))
#define I2C_STD_IS_ENACK_SHIFT (5)
#define I2C_STD_IS_ENACK_MASK \
		( I2C_STD_IS_ENACK_BIT << I2C_STD_IS_ENACK_SHIFT)

#define I2C_STD_IS_ENODEV_BIT ((uint32_t)(0x1))
#define I2C_STD_IS_ENODEV_SHIFT (4)
#define I2C_STD_IS_ENODEV_MASK \
		( I2C_STD_IS_ENODEV_BIT << I2C_STD_IS_ENODEV_SHIFT)

#define I2C_STD_IS_EAGAIN_BIT ((uint32_t)(0x1))
#define I2C_STD_IS_EAGAIN_SHIFT (3)
#define I2C_STD_IS_EAGAIN_MASK \
		( I2C_STD_IS_EAGAIN_BIT << I2C_STD_IS_EAGAIN_SHIFT)

#define I2C_STD_IS_BUSY_BIT ((uint32_t)(0x1))
#define I2C_STD_IS_BUSY_SHIFT (2)
#define I2C_STD_IS_BUSY_MASK \
		( I2C_STD_IS_BUSY_BIT << I2C_STD_IS_BUSY_SHIFT)

#define I2C_STD_IS_DONE_BIT ((uint32_t)(0x1))
#define I2C_STD_IS_DONE_SHIFT (1)
#define I2C_STD_IS_DONE_MASK \
		( I2C_STD_IS_DONE_BIT << I2C_STD_IS_DONE_SHIFT)

#define I2C_STD_START_BIT ((uint32_t)(0x1))
#define I2C_STD_START_SHIFT (0)
#define I2C_STD_START_MASK \
		( I2C_STD_START_BIT << I2C_STD_START_SHIFT)

/* OFFSET=0x4 PARAMATER Register */

#define I2C_STD_START_REPEAT_PROC_BIT ((uint32_t)(0x1))
#define I2C_STD_START_REPEAT_PROC_SHIFT (31)
#define I2C_STD_START_REPEAT_PROC_MASK \
		( I2C_STD_START_REPEAT_PROC_BIT << I2C_STD_START_REPEAT_PROC_SHIFT)

#define I2C_STD_CTRLWORD_PROC_BIT ((uint32_t)(0x1))
#define I2C_STD_CTRLWORD_PROC_SHIFT (30)
#define I2C_STD_CTRLWORD_PROC_MASK \
		( I2C_STD_CTRLWORD_PROC_BIT << I2C_STD_CTRLWORD_PROC_SHIFT)

#define I2C_STD_IOWORD_PROC_BIT ((uint32_t)(0x1))
#define I2C_STD_IOWORD_PROC_SHIFT (29)
#define I2C_STD_IOWORD_PROC_MASK \
		( I2C_STD_IOWORD_PROC_BIT << I2C_STD_IOWORD_PROC_SHIFT)

#define I2C_STD_STOP_PROC_BIT ((uint32_t)(0x1))
#define I2C_STD_STOP_PROC_SHIFT (28)
#define I2C_STD_STOP_PROC_MASK \
		( I2C_STD_STOP_PROC_BIT << I2C_STD_STOP_PROC_SHIFT)

#define I2C_STD_OUTD_ACKMASK_BIT ((uint32_t)(0xf))
#define I2C_STD_OUTD_ACKMASK_SHIFT (24)
#define I2C_STD_OUTD_ACKMASK_MASK \
		( I2C_STD_OUTD_ACKMASK_BIT << I2C_STD_OUTD_ACKMASK_SHIFT)

#define I2C_STD_OUTD_NUM_BYTE_BIT ((uint32_t)(0x7))
#define I2C_STD_OUTD_NUM_BYTE_SHIFT (20)
#define I2C_STD_OUTD_NUM_BYTE_MASK \
		( I2C_STD_OUTD_NUM_BYTE_BIT << I2C_STD_OUTD_NUM_BYTE_SHIFT)

#define I2C_STD_IND_ACKMASK_BIT ((uint32_t)(0xf))
#define I2C_STD_IND_ACKMASK_SHIFT (16)
#define I2C_STD_IND_ACKMASK_MASK \
		( I2C_STD_IND_ACKMASK_BIT << I2C_STD_IND_ACKMASK_SHIFT)

#define I2C_STD_IND_NUM_BYTE_BIT ((uint32_t)(0x7))
#define I2C_STD_IND_NUM_BYTE_SHIFT (12)
#define I2C_STD_IND_NUM_BYTE_MASK \
		( I2C_STD_IND_NUM_BYTE_BIT << I2C_STD_IND_NUM_BYTE_SHIFT)

#define I2C_STD_SLAVE_CTRLWORD_BIT ((uint32_t)0x7f) 
#define I2C_STD_SLAVE_CTRLWORD_SHIFT (1)
#define I2C_STD_SLAVE_CTRLWORD_MASK \
		( I2C_STD_SLAVE_CTRLWORD_BIT << I2C_STD_SLAVE_CTRLWORD_SHIFT)

#define I2C_STD_SLAVE_CTRLRDNWR_BIT ((uint32_t)0x1)
#define I2C_STD_SLAVE_CTRLRDNWR_SHIFT (0)
#define I2C_STD_SLAVE_CTRLRDNWR_MASK \
		( I2C_STD_SLAVE_CTRLRDNWR_BIT << I2C_STD_SLAVE_CTRLRDNWR_SHIFT)

#define I2C_STD_OP_STAT_REG(a) *((volatile unsigned int*)((intptr_t)(a) + 0x0)) 
#define I2C_STD_PARAM_REG(a) *((volatile unsigned int*)((intptr_t)(a) + 0x4)) 
#define I2C_STD_OUTPUT_DATA_REG(a) *((volatile unsigned int*)((intptr_t)(a) + 0x8)) 
#define I2C_STD_INPUT_DATA_REG(a) *((volatile unsigned int*)((intptr_t)(a) + 0xC)) 

#endif /* end of INC_MBMCS_I2C_STD_H */
